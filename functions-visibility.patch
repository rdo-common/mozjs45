diff --git a/js/public/CharacterEncoding.h b/js/public/CharacterEncoding.h
index 4763816..85afe3c 100644
--- a/js/public/CharacterEncoding.h
+++ b/js/public/CharacterEncoding.h
@@ -187,7 +187,7 @@ Utf8ToOneUcs4Char(const uint8_t* utf8Buffer, int utf8Length);
  * - On success, returns a malloc'd TwoByteCharsZ, and updates |outlen| to hold
  *   its length;  the length value excludes the trailing null.
  */
-extern TwoByteCharsZ
+extern JS_PUBLIC_API(TwoByteCharsZ)
 UTF8CharsToNewTwoByteCharsZ(JSContext* cx, const UTF8Chars utf8, size_t* outlen);
 
 /*
@@ -195,7 +195,7 @@ UTF8CharsToNewTwoByteCharsZ(JSContext* cx, const UTF8Chars utf8, size_t* outlen)
  * will be replaced by \uFFFD. No exception will be thrown for malformed UTF-8
  * input.
  */
-extern TwoByteCharsZ
+extern JS_PUBLIC_API(TwoByteCharsZ)
 LossyUTF8CharsToNewTwoByteCharsZ(JSContext* cx, const UTF8Chars utf8, size_t* outlen);
 
 /*
diff --git a/js/src/jsalloc.h b/js/src/jsalloc.h
index b9ae519..6660b71 100644
--- a/js/src/jsalloc.h
+++ b/js/src/jsalloc.h
@@ -49,7 +49,7 @@ class SystemAllocPolicy
 };
 
 class ExclusiveContext;
-void ReportOutOfMemory(ExclusiveContext* cxArg);
+JS_PUBLIC_API(void) ReportOutOfMemory(ExclusiveContext* cxArg);
 
 /*
  * Allocation policy that calls the system memory functions and reports errors
diff --git a/js/src/vm/Runtime.h b/js/src/vm/Runtime.h
index 9df5308..3821304 100644
--- a/js/src/vm/Runtime.h
+++ b/js/src/vm/Runtime.h
@@ -489,7 +489,7 @@ CanUseExtraThreads()
     return gCanUseExtraThreads;
 }
 
-void DisableExtraThreads();
+JS_PUBLIC_API(void) DisableExtraThreads();
 
 /*
  * Encapsulates portions of the runtime/context that are tied to a
